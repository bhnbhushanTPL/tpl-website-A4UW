import {footer} from "../common/footer.data";
import {futureThinking} from "../common/futureThinking.data";
export const blogsDb={

  getBlogsListings(){
    let res={
      Items: [
        {
          title: "How to Configure Sendmail on CentOS 6.x",
          description: " <p>Sendmail is a mail server used for sending and receiving mails. It works on SMTP (Simple Mail Transfer Protocol ) protocol on port 25.<br> <strong>a. Install package using Yum using command</strong></p><blockquote><p>yum install mailx sendmail sendmail-cf dovecot m4</p></blockquote><p><strong>b. Configure Sendmail to receive External Emails.</strong><br>You need to comment out below in /etc/mail/sendmail.mc to allow receiving emails from anywhere. You need to add “dnl” at the beginning of the line to make it commented.</p><blockquote><p>dnl DAEMON_OPTIONS(`Port=smtp,Addr=127.0.0.1, Name=MTA’)dnl</p></blockquote><p><strong>c. Add following line to sendmail.mc above option “MAILER”</strong></p><blockquote><p>FEATURE(`relay_hosts_only’)dnl</p></blockquote><p><strong>d. Add full hostname (FQDN)in following file</strong></p><blockquote><p># hostname &gt;&gt; /etc/mail/relay-domains</p></blockquote><p><strong>e. Recompile Sendmail using m4 (m4 is the macro processor compiler to compile sendmail configuration files.<br>m4 /etc/mail/sendmail.mc &gt; /etc/mail/sendmail.cf</strong><br><strong>f. Configure Dovecot to fetch emails.</strong></p><blockquote><p>Dovecot is used for providing POP and IMAP protocols for fetching emails from mail accounts.<br># vi /etc/dovecot/dovecot.conf<br>Search and modify lines as mentioned below.<br>protocols = imap<br>listen = *, ::<br>mail_location = mbox:~/mail:INBOX=/var/mail/%u</p></blockquote><p><strong>g. Restart Sendmail and Dovecot services to reload the new configuration generated from aforementioned steps.</strong></p><blockquote><p># service dovecot restart<br># service sendmail restart<br># chkconfig sendmail on</p></blockquote><p><strong>h. Open SMTP port on firewall by following commands</strong></p><blockquote><p># iptables -A INPUT -p tcp -m tcp &ndash;dport 25 -j Accept<br> # service iptables save</p></blockquote> <p><strong>i. Verify the email configuration</strong><br>   Use mailx ( To send email from command line ) and program like mutt (To fetch the mails for particular user). You may have to create new users if no users are already configured on machine.</p> <blockquote><p># mailx -s “Test email from user1” user2<br> Hello This is the test email.<br> .<br>   EOT<br> To fetch emails use mutt from command line. You may have to install mutt if not present already on your machine.<br> # mutt -f imap://username:password@localhost</p></blockquote>   <p>After sendmail configuration still your application configured using apache may not be able to send an email to user accounts configured inside your application. It may throw an error like “cannot chdir (/var/spool/clientmqueue): Permission denied.</p> <p>This may happen because httpd do not have permission set to send mail. There are two ways by which you can enable for apache to send the email. This might be an issue with Boolean parameter set in Selinux.<br> <strong>1. Try and configure Boolean by following below mentioned steps.</strong></p> <blockquote><p># getsebool -a | grep mail<br> allow_postfix_local_write_mail_spool &ndash;&gt; on<br> httpd_can_sendmail &ndash;&gt; off<br> logging_syslogd_can_sendmail &ndash;&gt; off</p> <p># setsebool -P httpd_can_sendmail on</p> <p>-P will make it permanent.</p></blockquote> <p><strong>2. You can also set the option of Selinux and achieve the same effect. </strong></p> <blockquote><p># sestatus | grep -i mode<br> Current mode: enforcing<br> Mode from config file: enforcing</p></blockquote> <p>You need to set current mode from enforcing to permissive mode. This can be achieved temporary by using following command. Once you reboot the machine, it will revert back the changes.</p> <p># setenforce 0</p> <p>To revert back the changes made, you use following command</p> <p># setenforce 1</p> <p><strong>3. You can make the changes permanent by following procedure below</strong></p> <blockquote><p># vi /etc/selinux/config<br> find the line SELINUX and set parameter as permissive from enforced.<br> SELINUX=permissive<br>   and reboot the machine to make it permanent.</p></blockquote> <p>That’s it. You should have working configuration of Sendmail running on CentOS machine. Please let me know if anything is wrong here.</p> ",
          img: "/src/app/blogs/images/cent-os.jpg",
          alt: "Lorem ipsum",
          publishedDate: "19 Jul 2016",
          author: "admin",
          url: "how-to-configure-sendmail-on-centOS6.x",
          index : 0,
        },
        {
          title: "How to write aggregate query in mongoid and mongodb",
          description: "<p>The preceding sections provide password-resetting instructions for Windows and Unix systems. Alternatively, on any platform, you can reset the password using the MySQL client (but this approach is less secure): </p> <ul class='number-list'> <li> Stop the MySQL server and restart it with the “&ndash;skip-grant-tables” option. This enables anyone to connect without a password and with all privileges, and disables account-management statements such as SET PASSWORD. Because this is insecure, you might want to use “&ndash;skip-grant-tables” in conjunction with “&ndash;skip-networking” to prevent remote clients from connecting. </li> <li> Connect to the MySQL server using the MySQL client; no password is necessary because the server was started with &ndash;skip-grant-tables Command Shell# mysql </li> <li> Then change the ‘root’@’localhost’ account password. Replace the password phrase with the password that you want to use. To change the password for a root account with a different hostname part, modify the instructions to use that host name. mysql SET PASSWORD FOR ‘root’@’localhost’ = PASSWORD(‘MyNewPass’); </li> <li> Using MySQL client, execute the server to reload the grant tables so that account-management statements work: mysql FLUSH PRIVILEGES; You should now be able to connect to the MySQL server as root using the new password. Stop the server and restart it normally (without the &ndash;skip-grant-tables and &ndash;skip-networking options). </li> </ul>",
          img: "/src/app/blogs/images/mongo-db.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "how-to-write-aggregate-query-in-mongoid-and-mongodb",
          index : 1,
        },
        {
          title: "How to reset MySQL root password",
          description: "<p>The preceding sections provide password-resetting instructions for Windows and Unix systems. Alternatively, on any platform, you can reset the password using the MySQL client (but this approach is less secure): </p>           <ul class='number-list'>             <li>               Stop the MySQL server and restart it with the “&ndash;skip-grant-tables” option. This enables anyone to connect without a password and with all privileges, and disables account-management statements such as SET PASSWORD.               Because this is insecure, you might want to use “&ndash;skip-grant-tables” in conjunction with “&ndash;skip-networking” to prevent remote clients from connecting.             </li>             <li>               Connect to the MySQL server using the MySQL client; no password is necessary because the server was started with &ndash;skip-grant-tables Command Shell# mysql             </li>             <li>               Then change the ‘root’@’localhost’ account password. Replace the password phrase with the password that you want to use. To change the password for a root account with a different hostname part, modify the instructions to use that host name.               mysql SET PASSWORD FOR ‘root’@’localhost’ = PASSWORD(‘MyNewPass’);             </li>             <li>               Using MySQL client, execute the server to reload the grant tables so that account-management statements work:               mysql FLUSH PRIVILEGES;               You should now be able to connect to the MySQL server as root using the new password. Stop the server and restart it normally (without the &ndash;skip-grant-tables and &ndash;skip-networking options).             </li>           </ul>",
          img: "/src/app/blogs/images/my-sql.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "how-to-reset-mySQL-root-password.",
          index : 2,
        },
        {
          title: "Create & Install Self Signed SSL Certificate and redirect http to https.",
          description: "<p><strong><em>First part is to create Self Signed Certificate</em></strong></p> <p>Creating and Installing OpenSSL self-signed certificate and configure apache so that traffic can be diverted from HTTP to HTTPS, which is more secure protocol. Normally, Self-signed certificates should be installed on production environment. Following exercise is for Ubuntu machine.</p> <ul class='number-list'> <li> Executed following command on Ubuntu machine to generate private key.<br> openssl genrsa -des3 -out server.key 2048 </li> <li> Now create the insecure Key for http so that at every restart we do not need to supply the password<br> openssl rsa -in server.key -out server.key.insecure<br> mv server.key server.key.secure<br> mv server.key.insecure server.key </li> <li> To create the CSR, run the following command at a terminal prompt<br> openssl req -new -key server.key -out server.csr <p>After then answered following questions<br> Country Name (2 letter code) [AU]:US<br> State or Province Name (full name) [Some-State]:<br> Locality Name (eg, city) []:.<br> Organization Name (eg, company) [Internet Widgits Pty Ltd]:<br> Organizational Unit Name (eg, section) []:.<br> Common Name (e.g. server FQDN or YOUR name) []:www.example.com<br> Email Address []:yourname@domain.com</p> <p>Please enter the following ‘extra’ attributes<br> to be sent with your certificate request<br> A challenge password []:<br> An optional company name []:</p> </li> <li> To create the self-signed certificate, run the following command at a terminal prompt<br> openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt </li> <li> You can install the key file server.key and certificate file server.crt, or the certificate file issued by your CA, by running following commands at a terminal prompt<br> cp server.crt /etc/ssl/certs<br> cp server.key /etc/ssl/private<br> <p><strong><em>Now second part is that you have to configure the Apache Webserver.</em></strong></p> </li> <li> apt-get install openssl </li> <li> a2enmod ssl </li> <li> Edited default configuration file vi /etc/apache2/sites-enabled/000-default.conf and added following configuration<br> a. Redirect permanent / https://8.26.21.70/  &ndash; this line added in default virtualhost *.80<br> b. Created another virtual configuration as below<br> <virtualhost _default_:443=''><br> ServerName www.mybookfinds.com<br> DocumentRoot /var/www/mybookfinds/app<br> SSLEngine On<br> SSLCertificateFile /etc/ssl/certs/server.crt<br> SSLCertificateKeyFile /etc/ssl/private/server.key<br> </virtualhost> <p>### Configuration ends here###</p> </li> </ul>",
          img: "/src/app/blogs/images/ubuntu.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "create-and-install-self-signed-SSL-certificate-and-redirect-http-to-https",
          index : 3,
        },
        {
          title: "How to install Redmine (version 3.1.1) on Apache – CentOS 7",
          description: "<h3> <strong>Following procedure should help you to install Redmine tool on your CentOS 7 machine.</strong> </h3> <p><strong>Couple of Assumptions:-</strong></p> <ul class='number-list'> <li> You are logged on to machine as root user. </li> <li> Apache 2.x &amp; MySQL/MariaDB is installed on your machine and document root is /var/www/html </li> <li> Installation of Ruby 2.2 is also taken care along with development tools for centos. If you need the instructions can be found on following URL<br> <a target='_blank' href='http://www.server-world.info/en/note?os=CentOS_7&amp;p=ruby22' title='http://www.server-world.info/en/note?os=CentOS_7&amp;p=ruby22'>http://www.server-world.info/en/note?os=CentOS_7&amp;p=ruby22</a> </li> </ul> <p><strong>Download the Redmine version 3.1.1 from Redmine Site</strong></p> <blockquote><p> # wget http://www.redmine.org/releases/redmine-3.1.1.tar.gz</p> </blockquote> <p><strong>Extract Redmine from the gzip tarball</strong></p> <blockquote><p> # tar zxvf redmine-3.1.1.tar.gz </p> </blockquote> <p><strong>Move extracted Redmine directory to /var/www</strong></p> <blockquote> <p># mv redmine-3.1.1 /var/www/redmine<br> # cd /var/www/redmine </p> </blockquote> <p><strong>Now follow below steps to create user &amp; database for Redmine.</strong> </p> <ul class='alphabeta-list'> <li> mysql -u root -p (Enter the password and you will get to MySQL/MariaDB prompt) </li> <li> CREATE DATABASE redmine; </li> <li> GRANT ALL PRIVILEGES on redmine.* to username@’localhost’ identified by ‘YOUR PASSWORD’; </li> <li> GRANT ALL PRIVILEGES on redmine.* to root@’localhost’ identified by ‘YOUR PASSWORD FOR ROOT’; </li> <li> FLUSH PRIVILEGES; </li> </ul> <p> With above steps you have created Database “redmine” and user to access it.</p> <p>You are alredy in /var/www/redmine directory. Modify settings in database.yml to based on above steps. </p> <blockquote><p># mv ./config/database.yml.example ./config/database.yml<br> # vi ./config/database.yml</p> </blockquote> <p>Modify username and password with the one setup earlier during redmine database configuration. Save and Exit the file. Similarly modify confguration.yml file and change SMTP settings to enable redmine to send emails.</p> <p>Install/update the bundler </p> <blockquote><p># gem install bundler &ndash;no-rdoc &ndash;no-ri</p> </blockquote> <p>Install Gem for Redmine</p> <blockquote><p> # bundle install &ndash;without development test postgresql sqlite</p> </blockquote> <p>Generate Keys </p> <blockquote><p> # bundle exec rake generate_secret_token</p> </blockquote> <p>Generate Tables<br> # bundle exec rake db:migrate RAILS_ENV=production</p> <p>Install Passenger </p> <blockquote><p> # gem install passenger &ndash;no-rdoc &ndash;no-ri</p> </blockquote> <p>Install modules for Apache </p> <blockquote><p> # passenger-install-apache2-module</p> </blockquote> <p>Once you execute above command following message will be displayed and you need to proceed as per the instructions on the screen</p> <p>This installer will guide you through the entire installation process. It shouldn’t take more than 3 minutes in total.<br> Here’s what you can expect from the installation process:</p> <ul class='number-list'> <li> The Apache 2 module will be installed for you. </li> <li> You’ll learn how to configure Apache. </li> <li> You’ll learn how to deploy a Ruby on Rails application. </li> </ul> <p>Don’t worry if anything goes wrong. This installer will advise you on how to solve any problems.<br> Press Enter to continue, or Ctrl-C to abort. Specify 1 and hit Enter.</p> <p>Restart Apache process </p> <blockquote><p> # systemctl restart httpd</p> </blockquote> <p>You are ready to deploy any number of web applications on Apache, with a minimum amount of configuration!</p> <p>Create configuration file for passenger and add following lines to run Redmine on port 8080. As I am assuming that on default port 80 you might have some other website running already. You can change the port number based on your convenience and configuration of machine.</p> <blockquote><p> # vi /etc/httpd/conf.d/passenger.conf</p> </blockquote> <p>LoadModule passenger_module /usr/lib64/ruby/gems/2.2.0/gems/passenger-5.0.20/buildout/apache2/mod_passenger.so<br> PassengerRoot /usr/lib64/ruby/gems/2.2.0/gems/passenger-5.0.20<br> PassengerDefaultRuby /usr/bin/ruby<br> PassengerDefaultUser apache<br> NameVirtualHost *:8080<br> ServerName xxx.xxx.xxx.xxx #(Either IP of your machine or FQDN)<br> DocumentRoot /var/www/redmine/public</p> <p>Save and exit out of vi editor.</p> <p>Modify /etc/httpd/conf/httpd.conf and add following line into it<br> Listen 8080<br> Save and exit. Make sure that the port which you are defining is opened through firewall in order to accept the requests on this port.</p> <p><strong>Restart Apache process</strong> </p> <blockquote><p> # systemctl restart httpd</p> </blockquote> <p><strong>Now you can visit following URL to get to Redmine login page.<br> http://(IP address or FQDN of your webserver):8080<br> </strong></p>",
          img: "/src/app/blogs/images/redmine.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "how-to-install-redmine-version-3-1-1-on-apache-centos-7",
          index : 4,
        },
        {
          title: "Everything you need to know about Webtorrent",
          description: "<h3 style='text-align: justify;'><b>What is WebTorrent ?</b></h3> <p style='text-align: justify;'>WebTorrent<span style='font-weight: 400;'> is torrent client like <a href='http://www.utorrent.com/intl/en/'>utorrent</a> or <a href='http://www.bittorrent.com/'>bittorrent</a>, but it works in the </span>browser<span style='font-weight: 400;'>. It’s completely written in JavaScript and internally uses </span><a href='https://webrtc.org/'>WebRTC</a><span style='font-weight: 400;'> for true P2P communication. In technical terms it’s a streaming torrent client for <a href='https://nodejs.org/en/'>node.js </a>and the browser. &nbsp;One of the cool thing WebTorrent is that you do not need to install any extension or plugin in your browser to use it. WebTorrent uses open web standards and connects website users together to form distributed and decentralized network of browsers &nbsp;for transferring files efficiently. Browser-to-browser communication cuts out the middle-man and lets people communicate on their own terms. No more client/server &ndash; just a network of peers, all equal. WebTorrent is the first step in the journey to </span><a href='http://redecentralize.org/about/'><span style='font-weight: 400;'>redecentralize</span></a><span style='font-weight: 400;'> the Web. It works across the entire web and WebTorrent clients running on one domain can connect to clients on any other domain. The same-origin policy does not apply to <a href='https://webrtc.org/'>WebRTC</a> connections since they are not client-to-server. Browser-to-browser connections require the cooperation of both websites (i.e. the WebTorrent script must be present on both sites).</span></p> <p style='text-align: justify;'><span style='font-weight: 400;'>WebTorrent is currently new technology but still used by many popular applications. Some this are as follows: </span></p> <ul style='text-align: justify;'> <li style='font-weight: 400; text-align: justify;'><a href='https://webtorrent.io/desktop'><b>WebTorrent Desktop</b></a><span style='font-weight: 400;'> &ndash; Open source streaming torrent client. For OS X, Windows, and Linux.</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://instant.io/'><b>Instant.io</b></a><span style='font-weight: 400;'> &ndash; Streaming file transfer over WebTorrent </span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://blog.printf.net/articles/2015/05/29/announcing-gittorrent-a-decentralized-github/'><b>GitTorrent</b></a><span style='font-weight: 400;'> &ndash; Decentralized GitHub using BitTorrent and Bitcoin </span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://peercloud.io/'><b>PeerCloud</b></a><span style='font-weight: 400;'> &ndash; Serverless websites via WebTorrent </span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://file.pizza/'><b>File.pizza</b></a><span style='font-weight: 400;'> &ndash; Free peer-to-peer file transfers in your browser</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://github.com/alexeisavca/webtorrentapp'><b>Webtorrentapp</b></a><span style='font-weight: 400;'> &ndash; Platform for launching web apps from torrents</span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://fastcast.nz/'><b>Fastcast</b></a><span style='font-weight: 400;'> &ndash; Gallery site with some videos</span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://coloredcoins.org/'><b>Colored Coins</b></a><span style='font-weight: 400;'> &ndash; Open protocol for creating digital assets on the Blockchain</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://tokenly.com/'><b>Tokenly Pockets</b></a><span style='font-weight: 400;'> &ndash; Digital token issuance with WebTorrent-based metadata </span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://btorrent.xyz/'><b>βTorrent</b></a><span style='font-weight: 400;'> &ndash; Fully-featured browser WebTorrent client</span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://seedshot.io/'><b>Seedshot</b></a><span style='font-weight: 400;'> &ndash; Peer to peer screenshot sharing from your browser</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://github.com/retrohacker/peerweb.js'><b>PeerWeb</b></a><span style='font-weight: 400;'> &ndash; Fetch and render a static website from a torrent</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://andreapaiola.name/niagara/'><b>Niagara</b></a><span style='font-weight: 400;'> &ndash; Video player webtorrent with subtitles (zipped .srt(s))</span></li> <li style='font-weight: 400; text-align: justify;'><a href='https://andreapaiola.name/vique/'><b>Vique</b></a><span style='font-weight: 400;'> &ndash; Video player queue to share videos</span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://youshark.neocities.org/'><b>YouShark</b></a><span style='font-weight: 400;'> &ndash; Web music player for WebTorrent</span></li> <li style='font-weight: 400; text-align: justify;'><a href='http://twister.net.co/?p=589'><b>Twister</b></a><span style='font-weight: 400;'> &ndash; Decentralized microblogging service, using WebTorrent for media attachments</span></li> </ul> <h3 style='text-align: justify;'><b>Who build it and responsible for further development ?</b></h3> <p style='text-align: justify;'><span style='font-weight: 400;'>WebTorrent is build by </span><b>Feross Aboukhadijeh </b><span style='font-weight: 400;'>a</span> <span style='font-weight: 400;'>graduate from &nbsp;</span><a href='http://stanford.edu/'><span style='font-weight: 400;'>Stanford University</span></a><span style='font-weight: 400;'> and hundreds of other open source contributors. </span><b>Feross Aboukhadijeh </b><span style='font-weight: 400;'>has worked at </span><a href='http://www.quora.com/'><span style='font-weight: 400;'>Quora</span></a><span style='font-weight: 400;'>, </span><a href='http://www.facebook.com/'><span style='font-weight: 400;'>Facebook</span></a><span style='font-weight: 400;'>, and </span><a href='http://www.intel.com/'><span style='font-weight: 400;'>Intel</span></a><span style='font-weight: 400;'>. &nbsp;You can view his full profile here </span><a href='http://feross.org/about/'><span style='font-weight: 400;'>http://feross.org/about/</span></a></p> <h3 style='text-align: justify;'><b>How does WebTorrent work?</b></h3> <p style='text-align: justify;'><span style='font-weight: 400;'>The WebTorrent protocol works somewhat similar to </span><a href='https://wiki.theory.org/BitTorrentSpecification'><span style='font-weight: 400;'>BitTorrent protocol</span></a><span style='font-weight: 400;'>, except it uses <a href='https://webrtc.org/'>WebRTC</a> instead of TCP/uTP as transport layer protocol. Consider following fig :</span></p> <p style='text-align: justify;'><span style='font-weight: 400;'>Once peers are connected, the wire protocol used to communicate is exactly the same as in normal BitTorrent ( </span><a href='http://www.howtogeek.com/141257/htg-explains-how-does-bittorrent-work/'><span style='font-weight: 400;'>How BitTorrent works ?</span></a><span style='font-weight: 400;'> ). This makes it easy for existing popular torrent clients like Transmission, and uTorrent to add support for WebTorrent. </span></p> <h3 style='text-align: justify;'><b>How to use WebTorrent in your App?</b></h3> <p style='text-align: justify;'><span style='font-weight: 400;'>Using WebTorrent in your app is pretty easy, you just need to include </span><a href='https://cdn.jsdelivr.net/webtorrent/latest/webtorrent.min.js'><span style='font-weight: 400;'>webtorrent.min.js</span></a><span style='font-weight: 400;'> to your app. You will get more details about this on </span><a href='https://webtorrent.io/intro'><span style='font-weight: 400;'>https://webtorrent.io/intro</span></a><span style='font-weight: 400;'> and official documentation is available on</span><a href='https://webtorrent.io/docs'><span style='font-weight: 400;'> https://webtorrent.io/docs</span></a></p> <h3 style='text-align: justify;'><b>How you can contribute it ?</b></h3> <p style='text-align: justify;'><span style='font-weight: 400;'>WebTorrent is an </span><b>OPEN Open Source Project</b><span style='font-weight: 400;'>. Individuals who make significant and valuable contributions are given commit access to the project to contribute as they see fit. See it on </span><a href='https://github.com/feross/webtorrent'><span style='font-weight: 400;'>GitHub</span></a></p>",
          img: "/src/app/blogs/images/web-torrent.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "everything-you-need-to-know-about-webtorrent",
          index : 5,
        },
        {
          title: "How Node.JS is changing the directives of app development",
          description: "<p><span style='font-weight: 400;'>Using one of the most popular programming languages today, Node.JS is leading to more rapid development with greater agility and reduced labour costs. Node.JS is within easy reach of a huge number of developers. </span></p> <p><span style='font-weight: 400;'>Here’s how Node.JS is dragging majority of developers from around the world: </span></p> <ul> <li> <h3><b><b>Splendid Ecosystem</b></b></h3> </li> </ul> <p><span style='font-weight: 400;'>With the combination of the work of low-level system programmers and front-end JavaScript developers, Node.Js provides an ecosystem to enable server-side development. </span></p> <p><span style='font-weight: 400;'>In spite of all the dependencies inside Node.JS ecosystem, the environs make it easier to adapt, absorb, and share.</span></p> <p><span style='font-weight: 400;'>Node Package Manager (npm) is the largest package ecosystem ever containing more that 300,000 packages as results.</span></p> <ul> <li> <h3><b><b>Modular design</b></b></h3> </li> </ul> <p><span style='font-weight: 400;'>Modular design of Node.JS makes it elementary for the developers to switch from their existing language work culture to Node.JS.</span></p> <p><span style='font-weight: 400;'>Node.JS allows one to manage code internally with the help of a package registry and enable teams to collaborate more effectively. It also encourages the enabling of its modular design through its ecosystem and tooling. </span></p> <p><span style='font-weight: 400;'>Node.JS also authorize faster app development and better team collaboration as each module is delivering specific functionality such that it can be shared across teams and across applications.</span></p> <ul> <li> <h3><b><b>Association</b></b></h3> </li> </ul> <p><span style='font-weight: 400;'>Alongside modular design and a magnificent ecosystem, Node.JS developers are benefited with increased association.</span></p> <p><span style='font-weight: 400;'>Unlike Java, which shares its code typically in the form of large libraries, Node.JS makes developing applications trouble-free and faster with more focus on components that groups can organization-wide associate on together.</span></p> <p><span style='font-weight: 400;'>Isomorphic JavaScript, which is backend of Node.JS code, creates new ways to collaborate and allows for more systematic use of time and &nbsp;endeavour by the teams. </span></p> <ul> <li> <h3><b><b>Operating costs</b></b></h3> </li> </ul> <p><span style='font-weight: 400;'>Node.JS easily works its way on modern cloud ecosystems, allowing operational teams to have a nearly one-to-one relationship between resources and servers.</span></p> <p><span style='font-weight: 400;'>As Node.JS makes it easier to produce applications, it also makes the JavaScript runtime environment cost-effective. </span></p> <p><span style='font-weight: 400;'>Node.JS apps build faster, it helped in reducing infrastructure and improved performance of many developers using the environment to develop cutting-edge applications.</span></p> <p>Being a developer here at TechPrimeLab, I personally enjoy using Node.JS as it is hassle-free and user friendly so it’s easier for me to progressively adapt the functionality of the environment and make efficient application development.</p>",
          img: "/src/app/blogs/images/node-js.jpg",
          alt: "Lorem ipsum",
          publishedDate: "20 Jul 2016",
          author: "admin",
          url: "how-nodeJS-is-changing-the-directives-of-app-development",
          index : 6,
        }
      ],
      footer: footer,

      futureThinking: futureThinking,
    };
    return Promise.resolve(res);
  },

};
